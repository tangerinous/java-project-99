plugins {
	id 'application'
	id 'checkstyle'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	// Плагины для openapi
	id 'com.github.johnrengelman.processes' version '0.5.0'
    id 'org.springdoc.openapi-gradle-plugin' version '1.6.0'
	id 'org.siouan.frontend-jdk11' version '6.0.0'
	id "io.sentry.jvm.gradle" version "3.14.0"
}
sentry {
	// Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.
	// This enables source context, allowing you to see your source
	// code as part of your stack traces in Sentry.
	includeSourceContext = true

	org = "david-chaava"
	projectName = "java-spring-boot"
	authToken = "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"
}

group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 20

application {
    mainClass = 'hexlet.code.AppApplication'
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation(
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.boot:spring-boot-starter-validation',
			'org.springframework.boot:spring-boot-starter-security',
			'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0',
			'io.jsonwebtoken:jjwt:0.9.1',
			'com.rollbar:rollbar-spring-boot3-webmvc:1.10.0',
			'com.querydsl:querydsl-jpa:5.0.0:jakarta',
			'javax.xml.bind:jaxb-api:2.3.1',
			'io.sentry:sentry-spring-boot-starter-jakarta:6.34.0'

	)
	annotationProcessor('com.querydsl:querydsl-apt:5.0.0:jakarta')

	testImplementation(
			'org.springframework.security:spring-security-test',
			'org.springframework.boot:spring-boot-starter-test'
	)

	compileOnly 'org.projectlombok:lombok:1.18.30'

	runtimeOnly (
        'com.h2database:h2',
        'org.postgresql:postgresql:42.6.0'
    )

	annotationProcessor(
			'org.projectlombok:lombok:1.18.30',
			'com.querydsl:querydsl-apt:5.0.0:jakarta',
			'jakarta.persistence:jakarta.persistence-api:3.1.0'
    )
}
sourceSets {
	generated {
		java {
			srcDirs = ['build/generated/sources/annotationProcessor/java/main']
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava {
    options.release = 20
    options.encoding = 'UTF-8'
}